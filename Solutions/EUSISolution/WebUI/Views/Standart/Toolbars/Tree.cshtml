@using Base.UI.ViewModal
@model Dialog_WidgetViewModel

@{
    string nameToolbar = Html.CreateSystemName("toolbar_tree_view");
    string btnAddRootId = Html.CreateSystemName("addbtn");
    string btnAddChildId = Html.CreateSystemName("addchildbtn");
    string btnEditId = Html.CreateSystemName("editbtn");
    string btnDeleteId = Html.CreateSystemName("deletebtn");
    string searchboxId = Html.CreateSystemName("searchbox");

    bool actionCreate = !Model.IsReadOnly && Model.IsPermission(TypePermission.Create) && Model.ViewModelConfig.ListView.VisibleAction(LvAction.Create);
    bool actionEdit = !Model.IsReadOnly && Model.IsPermission(TypePermission.Write);
    bool actionDelete = !Model.IsReadOnly && Model.IsPermission(TypePermission.Delete) && Model.ViewModelConfig.ListView.VisibleAction(LvAction.Delete);
    bool actionSearch = Model.ViewModelConfig.TypeEntity.IsFullTextSearchEnabled() && Model.ViewModelConfig.ListView.VisibleAction(LvAction.Search);
}

<script>
    window["@nameToolbar"] = new WrapToolbar("@nameToolbar", "ToolbarTreeView");

    (function () {
        var composite = window["@Model.DialogID"];
        var toolbar = window["@nameToolbar"];

        composite.registerWidget(toolbar);

        toolbar.__overrideOnNeighbourWidgetChanged = toolbar.onNeighbourWidgetChanged;

        toolbar.onNeighbourWidgetChanged = function (e) {
            toolbar.__overrideOnNeighbourWidgetChanged(e);

            if (e.sender.desc === "TreeView") {
                if (e.event === "select") {
                    var $select = e.params.select;

                    var isSelected = $select.length > 0;

                    toolbar.enable("#@btnEditId", isSelected);

                    @if (actionDelete) {
                    @: toolbar.enable("#@btnDeleteId", isSelected);
                                                        }
                }
                else if (e.event == "onDataBound") {
                    toolbar.element().find('#@searchboxId').find('.cancel-search').removeClass('k-loading').addClass('k-i-close');
                    toolbar.popupEl().find('#@searchboxId').find('.cancel-search').removeClass('k-loading').addClass('k-i-close');
                }
            }
        };

        //events
        toolbar.onClick = function (e) {
            composite.onWidgetChanged({
                sender: toolbar,
                event: "click",
                params: { action: e.target[0].getAttribute("data-action") }
            });
        };

        toolbar.searchBox_onClick = function (e) {
            if (e.str) {
                e.sender.find('.cancel-search').addClass('k-loading').removeClass('k-i-close');
            }

            composite.onWidgetChanged(
                {
                    sender: toolbar,
                    event: "search",
                    params: { str: e.str }
                });
        };
    })();
</script>

@(Html.Kendo().ToolBar()
    .Name(nameToolbar)
        .Events(e => e.OverflowOpen(nameToolbar + ".onOverflowOpen"))
    .Items(items =>
    {
        items.Add().Type(CommandType.ButtonGroup).Overflow(ShowInOverflowPopup.Never).Buttons(buttons =>
        {
            if (actionCreate) { buttons.Add().Text("Создать корневую категорию").HtmlAttributes(new { title = "Создать корневую категорию", data_action = "add-root" }).SpriteCssClass("btntoolbar mdi mdi-folder-plus").Id(btnAddRootId).ShowText(ShowIn.Overflow).Click(nameToolbar + ".onClick"); }
            if (actionCreate) { buttons.Add().Text("Создать дочернюю категорию").HtmlAttributes(new { title = "Создать дочернюю категорию", data_action = "add" }).SpriteCssClass("btntoolbar fa fa-plus").Id(btnAddChildId).ShowText(ShowIn.Overflow).Click(nameToolbar + ".onClick"); }

            if (actionEdit)
            {
                buttons.Add().Text("Редактировать").HtmlAttributes(new { title = "Редактировать", data_action = "edit" }).SpriteCssClass("btntoolbar fa fa-pencil").Id(btnEditId).ShowText(ShowIn.Overflow).Click(nameToolbar + ".onClick");
            }
            else
            {
                buttons.Add().Text("Просмотр").HtmlAttributes(new { title = "Просмотр", data_action = "edit" }).SpriteCssClass("btntoolbar fa fa-eye").Id(btnEditId).ShowText(ShowIn.Overflow).Click(nameToolbar + ".onClick");
            }

            if (actionDelete) { buttons.Add().Text("Удалить").HtmlAttributes(new { title = "Удалить", data_action = "delete" }).SpriteCssClass("btntoolbar fa fa-trash-o").Id(btnDeleteId).ShowText(ShowIn.Overflow).Click(nameToolbar + ".onClick"); }
        });

        if (actionSearch)
        {
            items.Add().Template(
                        string.Format(@"<div id='{0}' class='k-button-group'>
                            <div class='search-tools'>
                                <span class='k-icon k-i-close cancel-search'></span>
                                <input class='k-textbox' placeholder='Поиск' value='{1}'>
                            </div>
                        </div>", searchboxId, Model.SearchStr))
                        .OverflowTemplate(
                        string.Format(@"<div id='{0}' class='k-button-group'>
                            <div class='search-tools'>
                                <span class='k-icon k-i-close cancel-search'></span>
                                <input class='k-textbox' placeholder='Поиск' value='{1}'>
                            </div>
                        </div>", searchboxId, Model.SearchStr));
        }
    })
)

<script>
    $(function () {
        var toolbar = window["@nameToolbar"];
        var $toolbar = toolbar.element();
        var composite = window["@Model.DialogID"];

        //NOTE: в данной версии toolbar-а возможно использовать иконки только из кендо-спрайтов
        //TODO: убрать!!!
        //$toolbar.find(".k-sprite.glyphicon").removeClass("k-sprite");
        //toolbar.popupEl().find(".k-sprite.glyphicon").removeClass("k-sprite");

        $toolbar.find("#@searchboxId").pbaSearchBox(toolbar.searchBox_onClick);
        toolbar.popupEl().find("#@searchboxId").pbaSearchBox(toolbar.searchBox_onClick);

        toolbar.enable("#@btnEditId", false);
        toolbar.enable("#@btnDeleteId", false);


        var action = function () {
            if ($(this).hasClass('k-state-disabled')) return false;

            composite.onWidgetChanged(
                {
                    sender: toolbar,
                    event: 'click',
                    params: {
                        action: $(this).data('action')
                    }
                });
        };

        $toolbar.find('[data-action]').on('click', action);
        toolbar.popupEl().find('[data-action]').on('click', action);
    });
</script>
