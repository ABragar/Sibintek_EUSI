@model DashboardWidget

@{
    string wrapID = "news_" + Guid.NewGuid().ToString("N");
    string templateID = "tmpl_" + Guid.NewGuid().ToString("N");
}

@Html.DashboardWidget().Content(
    @<text>
        <div id="dashboard-widget-news" class="container-fluid dynamic-tile">
            <div id="@wrapID" class="row"></div>
        </div>
    </text>
        ).HtmlAttrs(new { style = "background: rgba(255,255,255,0.4);" })

<script id="@templateID" type="text/x-kendo-template">
    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 tile-wrap">
        <div class="tile">
            <div class="media">
                <a class="pull-left" href="\#" data-mnemonic="PublicNews" data-id="#= id #">
                    <img class="media-object" src="#= src #" alt="#= title # (изображение)">
                </a>
                <div class="media-body">
                    <h4 class="media-heading">#= title #</h4>
                    <div>
                        <i class="halfling halfling-glyph-calendar" style="color:\#428bca;"></i>
                        <span>#= date #</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    $(function () {
        var $wrap = $('#@wrapID');

        // middlewares
        var transformContentItem = function (raw) {
            return {
                id: raw.ID,
                title: raw.Title,
                desc: raw.Description,
                date: raw.Date.replace(/(\d{2}\.\d{2}\.\d{4}).+/, "$1"),
                src: pbaAPI.imageHelpers.getImageThumbnailSrc(raw.ImagePreview, "XS")
            };
        };

        var renderContentItem = kendo.template($('#@templateID').html());

        var insertContentItem = function (item) {
            $wrap.append(item);
        };

        // load/parse/paste
        $.get("/Content/GetNews", function (res) {
            if (res.Errors) {
                return pbaAPI.errorMsg(res.Errors);
            }

            res.Data
                .map(transformContentItem)
                .map(renderContentItem)
                .forEach(insertContentItem);
        });

        // detail view show
        $("#@wrapID").on('click', '[data-mnemonic][data-id]', function (e) {
            e.preventDefault();

            var mnemonic = this.getAttribute("data-mnemonic");
            var id = this.getAttribute("data-id");

            pbaAPI.openDetailView(mnemonic, { id: id, isReadOnly: true });
        });
    });
</script>