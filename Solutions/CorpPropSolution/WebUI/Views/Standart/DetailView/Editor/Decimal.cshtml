@model EditorViewModel

<script>
    function onDecimalEditorCange() {
        debugger;
        var editors = $("div.label-editor-row[data-field='@Model.PropertyName']");
        var vform = editors.closest("form");
        var form = vform.data('pbaForm')
        var isChange = true;
        debugger;
        @if (!String.IsNullOrEmpty(Model.OnClientEditorChange))
        {
           //внедряем текст скрипта
                    @Html.Raw(Model.OnClientEditorChange);
        }
    }
</script>

@(Html.Kendo().NumericTextBox().Name(Model.UID).Format("n")
        .HtmlAttributes(Html.CreateHtmlAttributes(Model, new { style = "width:100%; max-width: 200px;" }))        
        .Decimals(2).Spinners(false)
        .Events(e => e.Change("onDecimalEditorCange"))
)

<script>
    $(function () {       
        var editors = $("div.label-editor-row[data-field='@Model.PropertyName']");
        var form = editors.closest("form");
        var editor = editors.find("input");

        form.on('onAfterBind', function (evt, form) {
            debugger;
            var isChange = false;
            @if (!String.IsNullOrEmpty(Model.OnChangeClientScript))
            {

                //внедряем текст скрипта
                @Html.Raw(Model.OnChangeClientScript);
            }
            
        });

        form.on("onChange", function (evt, obj)
        {            
            if (obj.field === "@Model.PropertyName")
            {
                var form = obj.sender;
                var isChange = true;
                @if (!String.IsNullOrEmpty(Model.OnChangeClientScript))
                {
                    //внедряем текст скрипта
                    @Html.Raw(Model.OnChangeClientScript);
                }
            }

        });

    });
</script>
