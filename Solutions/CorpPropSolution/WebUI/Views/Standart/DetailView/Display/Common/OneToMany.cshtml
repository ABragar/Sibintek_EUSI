@model EditorViewModel

@using WebUI.Controllers
@using WebUI.Helpers
@using Base.UI.ViewModal


@{
    var config = Model.ViewModelConfig;
    
    string propertyName = Model.PropertyName;
    
    string editorID = Model.UID;

    var gridModel = new StandartGridView(ViewContext.Controller as IBaseController, config.Mnemonic, editorID, TypeDialog.Lookup);
}

<script>
    (function () {
        var grid = window["@gridModel.WidgetID"] = new WrapGrid({
            id: "@gridModel.WidgetID",
            mnemonic: "@config.Mnemonic",
            desc: "GridView"
        });

        @*--------Grid--------*@
        grid.getSelectDataItem = function () {
            var g = this.widget();

            var select = $(g.select());

            if (select.length > 0) {
                return g.dataItem(select);
            }

            return null;
        };

        grid.detailRow = function () {
            var uid = grid.selectUID();

            if (uid) {
                var form = $("#@editorID").closest("form").data("pbaForm");

                var entity = grid.getByUid(uid);

                pbaAPI.openDetailView("@config.Mnemonic",
                        {
                            wid: "@editorID",
                            entity: entity,
                            entities: form.getPr('@(propertyName)'),
                            isReadOnly: true,
                            parentForm: form,
                        });
            }
        };


        grid.onDataBound = function () {
            this.tbody.find('span[data-bg]').each(function () {
                var $cond = $(this);
                $cond.closest('td').css('background-color', $cond.data('bg'));
            });

            grid.activeRow();

            this.tbody.children("tr").dblclick(function () {
                grid.dblclick(this);
            });
        };

        grid.onChange = function (e) {
            var g = grid.widget();

            grid.initCurrentRow();
        };

        grid.dblclick = function (btn) {
            grid.detailRow();
        };

        grid.data = function () {
            var form = $("#@editorID").closest("form").data("pbaForm");

            if (!form.getPr('@(propertyName)')) {
                form.setPr('@(propertyName)', []);
            }

            return form.getPr('@(propertyName)');
        };


        grid.bind = function () {
            grid.widget().setDataSource(new kendo.data.DataSource({
                data: grid.data(),
                schema: {
                    model: grid.widget().dataSource.options.schema.model
                }
            }));

            grid.widget().dataSource.read();
        };
    })();
</script>

<div id="@editorID" class="one-to-many one-to-many-readonly kwidget kwidget--panel">
    @{Html.RenderPartial(gridModel.GetListViewUrl(), gridModel);}
</div>

<script>
    $(function () {
        $("#@editorID").closest("form").on("onAfterBind", function (e, form) {
            var grid = window["@gridModel.WidgetID"];

            grid.bind();
        });
     });
</script>