@model StandartScheduler

@{
    bool iswrite = !Model.IsReadOnly && Model.IsPermission(TypePermission.Write);
    string entityTitle = Model.ViewModelConfig.ListView.Title ?? Model.ViewModelConfig.Title;
}

@(Html.Kendo().Scheduler<SchedulerViewModel>()
    .Name(Model.WidgetID)
    .AutoBind(false)
    .Date(DateTime.Today)
    .StartTime(new DateTime(2000, 1, 1, 7, 0, 0))    
    .Views(views =>
    {
        views.DayView(x => x.Title("День"));
        views.WeekView(x => x.Title("Неделя"));
        views.MonthView(x => x.Title("Месяц")).Selected(true);
        views.AgendaView(x => x.Title("Повестка недели"));
    })
    .Editable(e => e.Create(false).Update(true).Move(iswrite).Confirmation(String.Format("Удалить {0}?", entityTitle.ToLower())))
    .Selectable(true)
    .EventTemplate(
            "<div class='k-event-title' style='background-color: #: data.Color #'>" +
              "#= data.title # " +
            "</div>")
    .AllDayEventTemplate("<div class='k-event-title' style='background-color: #: data.Color #'>" +
              "#= data.title # " +
            "</div>")

    .DataSource(d => d
        .WebApi()
        .ServerOperation(true)
        .Model(m =>
        {
            m.Id(f => f.ID);
            m.Field(f => f.Title).DefaultValue("Без названия");
            m.Field(f => f.RecurrenceID);
            m.Field(f => "#ff0000");
        })
      .Read(r => r.Data(Model.WidgetID + ".getAdditionalData"))      
      .Events(events => events.Error(Model.WidgetID + ".onErrorHandler"))
    )
    .Events(e =>
    {
        e.Change(Model.WidgetID + ".onChange");
        e.DataBound(Model.WidgetID + ".onDataBound");
        e.Edit(Model.WidgetID + ".onEdit");
    })
    .WorkDayStart(9, 0, 0)
    .WorkDayEnd(19, 0, 0)
    .Messages(msg =>
    {
        msg.Today("Сегодня").AllDay("весь день").Event(entityTitle).Date("Дата").Time("Время");
        msg.ShowFullDay("Показывать весь день").ShowWorkDay("Показывать только рабочее время");
        msg.Recurrence(x => x.DeleteWindowTitle("Удаление").DeleteRecurring(String.Format("Удалить повтор. {0}?", entityTitle.ToLower())).DeleteWindowOccurrence("Только текущую запись").DeleteWindowSeries("Все записи данной серии"));
        msg.Recurrence(x => x.EditWindowTitle("Изменение").EditRecurring(String.Format("Изменить повтор. {0}?", entityTitle.ToLower())).EditWindowOccurrence("Только текущую запись").EditWindowSeries("Все записи данной серии"));
        msg.DeleteWindowTitle("Удаление").Destroy("Удалить").Cancel("Отменить");
    })
)
